{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Common/Preloader/Loading.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","serviceWorker.js","api/api.js","redux/profileReducer.js","redux/dialogsReducer.js","redux/usersReducer.js","redux/authorizeReducer.js","redux/appReducer.js","redux/reduxStore.js","components/Navbar/Navbar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/ChatItem/ChatItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Users/UserElementMarkup.jsx","components/Users/Users.jsx","components/Common/Preloader/Loading.jsx","redux/user-selector.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","App.js","index.js","components/Navbar/Navbar.module.css","assets/img/simple-avatar.png","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/ChatItem/ChatItem.module.css","components/Users/Users.module.css"],"names":["module","exports","content","header","loginBlock","lds_roller","lds-roller","descriptionBlock","item","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","API-KEY","usersAPI","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","getUnfollow","userID","delete","getFollow","post","getProfile","console","warn","profileAPI","authAPI","email","password","rememberMe","getStatus","updateStatus","status","put","updatePhoto","file","formData","FormData","append","Content-Type","initialState","postsDataBase","id","text","like","postTypingText","profile","setStatus","type","profileReducer","state","action","Object","objectSpread","typingText","newPost","toConsumableArray","photos","dialogsNamesData","name","avatar","messageDataBase","sender","messageTypingText","dialogsReducer","newMessage","usersData","totalUsersCount","waitingResponse","waitingSubscribe","followSuccess","unfollowSuccess","toggleWaiting","toggle","toggleSubscribeProgress","followUnfollow","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","APImethod","actionCreator","wrap","_context2","prev","next","sent","resultCode","stop","_x2","_x3","_x4","_x5","apply","this","usersReducer","map","user","followed","users","totalCount","login","isAuthorize","setLoginData","payload","getAuthUserData","_ref","_callee","_response$data$data","_context","_x","authorizeReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","authorizeBlock","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","react_default","createElement","className","s","nav","react_router_dom","to","activeClassName","active","DialogItem","props","path","dialogImg","src","alt","dialogName","chatName","ChatItem","answer","message","Dialogs","refTextArea","React","createRef","dialogsWrapper","dialogsNamesWindow","elem","Dialogs_DialogItem_DialogItem","key","chatWindow","Dialogs_ChatItem_ChatItem","onChange","messageTextValue","current","value","textChange","ref","onClick","sendMessage","withAuthRedirect","Component","RedirectComponent","_React$Component","inherits","_super","_createSuper","classCallCheck","createClass","react_router","connect","updTypingMessageCreator","UserElementMarkup","styles","userElement","userPhoto","small","AvatarIMG","disabled","unfollow","follow","Users","pagination","defaultCurrent","total","pageNumber","onPageChange","defaultPageSize","Users_UserElementMarkup","Loading","style","getUsersData","createSelector","filter","u","getPageSize","getTotalUsersCount","getCurrentPage","UsersContainer","_this","setCurrentPage","setPageSize","Fragment","Preloader_Loading","components_Users_Users","_ref4","_callee4","_context4","bind","_x7","_ref3","_callee3","_context3","_x6","items","ProfileStatusHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","_useState4","useEffect","onDoubleClick","e","currentTarget","onBlur","sendNewStatus","ProfileInfo","userId","yourID","target","files","savePhoto","fullName","ProfileInfo_ProfileStatusHooks","Post","MyPosts","memo","postTextValue","updTypingPost","addPost","posts","MyPosts_Post_Post","MyPostsContainer","updTypingPostCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","params","getUserProfile","getUserStatus","components_Profile_Profile","assign","withRouter","Header","href","logOut","HeaderContainer","components_Header_Header","layout","labelCol","span","wrapperCol","Login","signIn","es_form","initialValues","remember","onFinish","values","username","log","onFinishFailed","errorInfo","Item","label","rules","required","input","Password","valuePropName","es_checkbox","es_button","htmlType","alert","messages","sendSignIdData","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","render","DialogsContainer","Profile_ProfileContainer","Users_UsersContainer","LoginContainer","ReactDOM","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","p","selectedPage"],"mappings":"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","file":"static/js/main.4ba9d709.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__3b2Ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2cZvj\",\"loginBlock\":\"Header_loginBlock__2r5gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_roller\":\"Loading_lds_roller__2kYzN\",\"lds-roller\":\"Loading_lds-roller__2x4n_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__H4tio\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1_LT_\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"b7aec3a8-1b77-41d6-aded-3789221e7d40\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = { //API для странички пользователей\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    getUnfollow(userID) {\r\n        return instance.delete(`follow/${userID}`)\r\n            .then(response => response.data);\r\n    },\r\n    getFollow(userID) {\r\n        return instance.post(`follow/${userID}`)\r\n            .then(response => response.data);\r\n    },\r\n    getProfile(userID) {\r\n        console.warn(\"Obsolete method. Use profileAPI\");\r\n        return profileAPI.getProfile(userID);\r\n    }\r\n};\r\n\r\nexport const authAPI = { // API для логина\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false){\r\n        return instance.post(`/auth/login/`,{email, password, rememberMe});\r\n    },\r\n    logout(){\r\n        return instance.delete(`/auth/login/`);\r\n    }\r\n}\r\n\r\nexport const profileAPI = { //API для своего профиля\r\n\r\n    getProfile(userID) {\r\n        return instance.get(`profile/${userID}`);\r\n    },\r\n    getStatus(userID) {\r\n        return instance.get(`profile/status/${userID}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status : status}); //\"status :\"-свойство объ к-рое требует сервер\r\n    },\r\n    updatePhoto(file) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", file)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    }\r\n}","import {profileAPI} from \"../api/api\";\r\n\r\nconst UPD_TYPING_POST = \"UPD_TYPING_POST\";\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst SET_PHOTOS_LINKS = \"SET_PHOTOS_LINKS\";\r\n\r\nlet initialState = {\r\n    postsDataBase: [\r\n        {id: 1, text: 'Hello my friends!', like: 25},\r\n        {id: 2, text: 'I learn react', like: 13},\r\n        {id: 3, text: 'Far far away...', like: 20},\r\n    ],\r\n    postTypingText: \"\",\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPD_TYPING_POST:\r\n            return {\r\n                ...state,\r\n                postTypingText: action.typingText\r\n            };\r\n\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 4,\r\n                text: state.postTypingText,\r\n                like: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                postsDataBase: [...state.postsDataBase, newPost],\r\n                postTypingText: ''\r\n            };\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_PHOTOS_LINKS:\r\n            debugger;\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n\r\n        default: // если ни один из action.type не подходит. Default необходим\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n//post Creators\r\nexport const addPostCreator = () => ({type: ADD_POST});\r\nexport const updTypingPostCreator = (text) => ({type: UPD_TYPING_POST, typingText: text});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status: status});\r\nexport const setPhotosLinks = (photos) => ({type: SET_PHOTOS_LINKS, photos});\r\n\r\nexport const getUserProfile = (userID) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userID);\r\n\r\n    dispatch(setUserProfile(response.data)); //dispatch вызывает setUserProfile(response.data) и тот возвращает экшн\r\n}\r\n\r\nexport const getUserStatus = (userID) =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userID);\r\n\r\n        if (response.data === \"\") {\r\n            response.data = \"status if empty\"\r\n        }\r\n        dispatch(setStatus(response.data));\r\n\r\n    }\r\n\r\nexport const sendNewStatus = (status) =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n\r\n    }\r\n\r\nexport const uploadPhoto = (file) =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.updatePhoto(file);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setPhotosLinks(response.data.data.photos));\r\n        }\r\n    }\r\n\r\nexport default profileReducer;","const UPD_TYPING_MESSAGE = \"UPD_TYPING_MESSAGE\";\r\nconst ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsNamesData: [\r\n        {id: 1, name: 'Nikita', avatar: 'https://avas.at.ua/_ph/45/1/469869713.jpg?1603712491'},\r\n        {id: 2, name: 'Egor', avatar: 'https://avas.at.ua/_ph/45/1/563058985.jpg?1603712491'},\r\n        {id: 3, name: 'Dima', avatar: 'https://avas.at.ua/_ph/45/1/940876170.jpg?1603712670'},\r\n    ],\r\n\r\n    messageDataBase: [\r\n        {id: 1, sender: true, text: \"Hello!\"},\r\n        {id: 2, sender: true, text: \"How are you?\"},\r\n        {id: 3, sender: false, text: \"I'll find you and hug!\"},\r\n        {id: 4, sender: true, text: \"Oh, no!\"},\r\n        {id: 5, sender: false, text: \"Time is running...\"},\r\n    ],\r\n    messageTypingText: \"\"\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case UPD_TYPING_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageTypingText: action.typingText\r\n            };\r\n\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 6,\r\n                sender: false,\r\n                text: state.messageTypingText\r\n            };\r\n            return {\r\n                ...state,\r\n                messageDataBase: [...state.messageDataBase, newMessage],\r\n                messageTypingText: \"\"\r\n            };\r\n\r\n        default : // если ни один из action.type не подходит\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n//chat Creators\r\nexport const sendMessageCreator = () => {\r\n\r\n    return {\r\n        type: ADD_MESSAGE\r\n    }\r\n}\r\n\r\nexport const updTypingMessageCreator = (text) => {\r\n\r\n    return {\r\n        type: UPD_TYPING_MESSAGE,\r\n        typingText: text\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst SET_USERS = \"SET_USERS\";\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_PAGE_SIZE = \"SET_PAGE_SIZE\";\r\nconst WAITING_RESPONSE = \"WAITING_RESPONSE\";\r\nconst WAITING_SUBSCRIBE = \"WAITING_SUBSCRIBE\";\r\n\r\nlet initialState = {\r\n    usersData: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    waitingResponse: false,\r\n    waitingSubscribe: {status: false, id: null}\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(user => {\r\n                    if (user.id === action.id) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(user => {\r\n                    if (user.id === action.id) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                usersData: action.users,\r\n                totalUsersCount: action.totalCount\r\n            };\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_PAGE_SIZE:\r\n            return {\r\n                ...state,\r\n                pageSize: action.pageSize\r\n            }\r\n\r\n        case WAITING_RESPONSE:\r\n            return {\r\n                ...state,\r\n                waitingResponse: action.toggle\r\n            }\r\n        case WAITING_SUBSCRIBE:\r\n            return {\r\n                ...state,\r\n                waitingSubscribe: {status: action.toggle, id: action.userID}\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userID) => ({type: FOLLOW, id: userID});\r\nexport const unfollowSuccess = (userID) => ({type: UNFOLLOW, id: userID});\r\nexport const setUsers = (users, totalCount) => ({type: SET_USERS, users, totalCount});\r\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, currentPage: pageNumber});\r\nexport const setPageSize = (pageSize) => ({type: SET_PAGE_SIZE, pageSize: pageSize});\r\nexport const toggleWaiting = (toggle) => ({type: WAITING_RESPONSE, toggle});\r\nexport const toggleSubscribeProgress = (toggle, userID) => ({type: WAITING_SUBSCRIBE, toggle, userID});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleWaiting(true));\r\n        currentPage = currentPage === 0 ? currentPage = 1 : currentPage;\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleWaiting(false));\r\n        dispatch(setUsers(data.items, data.totalCount));\r\n\r\n    }\r\n}\r\n\r\nexport const followUnfollow = async (dispatch, userID, APImethod, actionCreator) => {\r\n\r\n    dispatch(toggleSubscribeProgress(true, userID));\r\n\r\n    let response = await APImethod(userID);\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userID));\r\n    }\r\n    dispatch(toggleSubscribeProgress(false));\r\n\r\n}\r\n\r\nexport const unfollow = (userID) => {\r\n    return async (dispatch) => { //функция dispatch приходит в санку из стора. Параметры, как userID передавать только через замыкание.\r\n        followUnfollow(dispatch, userID, usersAPI.getUnfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport const follow = (userID) => {\r\n    return async (dispatch) => { //функция dispatch приходит в санку из стора. Параметры, как userID передавать только через замыкание.\r\n        followUnfollow(dispatch, userID, usersAPI.getFollow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\n\r\nconst SET_LOGIN_DATA = \"SET_LOGIN_DATA\";\r\n\r\nlet initialState = {\r\n    login: null,\r\n    userID: null,\r\n    email: null,\r\n    isAuthorize: false\r\n}\r\n\r\n\r\nconst authorizeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LOGIN_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setLoginData = (userID, email, login, isAuthorize) => ({\r\n    type: SET_LOGIN_DATA,\r\n    payload: {userID, email, login, isAuthorize}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setLoginData(id, email, login, true));\r\n    }\r\n\r\n};\r\n\r\nexport const sendSignIdData = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        alert(response.data.messages);\r\n    }\r\n\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    authAPI.logout().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setLoginData(null, null, null, false));\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport default authorizeReducer;","import {getAuthUserData} from \"./authorizeReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializeSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData()); // getAuthUserData возвращает промисс\r\n    promise.then(() => {\r\n        dispatch(initializeSuccess());\r\n    });\r\n};\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authorizeReducer from \"./authorizeReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    authorizeBlock: authorizeReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store; // строка для того, чтоб можно было в консоли обращаться к стору\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n\r\n        <ul>\r\n            <li>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Dialogs</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/login\" activeClassName={s.active}>Login</NavLink>\r\n            </li>\r\n        </ul>\r\n\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div>\r\n            <NavLink activeClassName={s.active} to={path}>\r\n                <img className={s.dialogImg} src={props.avatar} alt=\"chatAvatar\"/>\r\n                <span className={s.dialogName}>{props.chatName}</span>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './ChatItem.module.css';\r\n\r\nconst ChatItem = (props) => {\r\n    let status = props.sender === true ? s.sender : s.answer;\r\n    return (\r\n        <div className={status}>{props.message}</div>\r\n    );\r\n\r\n}\r\n\r\nexport default ChatItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport ChatItem from \"./ChatItem/ChatItem\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let refTextArea = React.createRef();\r\n\r\n    let sendMessageButton = () => {\r\n        props.sendMessage();\r\n    }\r\n    let onMessageChange = () => {\r\n        debugger;\r\n        let messageTextValue = refTextArea.current.value;\r\n        props.textChange(messageTextValue);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogsWrapper}>\r\n            <div className={s.dialogsNamesWindow}>\r\n                {props.dialogsPage.dialogsNamesData.map(elem => <DialogItem id={elem.id} chatName={elem.name}\r\n                                                                            avatar={elem.avatar} key={elem.id}/>)}\r\n            </div>\r\n\r\n            <div className={s.chatWindow}>\r\n                {props.dialogsPage.messageDataBase.map(elem => <ChatItem message={elem.text} sender={elem.sender}\r\n                                                                         key={elem.id}/>)}\r\n                <div>\r\n                    <textarea onChange={onMessageChange} ref={refTextArea} value={props.dialogsPage.messageTypingText}/>\r\n                    <button onClick={sendMessageButton}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuthorize) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let mapStateToProps = (state) => ({\r\n        isAuthorize: state.authorizeBlock.isAuthorize\r\n    });\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import {sendMessageCreator, updTypingMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        },\r\n        textChange: (text) => {\r\n            dispatch(updTypingMessageCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n","import React from 'react';\r\nimport styles from \"./Users.module.css\";\r\nimport AvatarIMG from '../../assets/img/simple-avatar.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet UserElementMarkup = (props) => {\r\n\r\n\r\n    return <div className={styles.userElement}>\r\n        <NavLink to={`/profile/${props.id}`}>\r\n            <div><img alt=\"userPhoto\" className={styles.userPhoto}\r\n                      src={props.photos.small != null ? props.photos.small : AvatarIMG}/></div>\r\n        </NavLink>\r\n        <div>Nickname: {props.name}; id: {props.id}; status: {props.status}</div>\r\n        <button\r\n            disabled={props.waitingSubscribe.status === true && props.waitingSubscribe.id === props.id}\r\n            onClick={() => {\r\n                    props.followed === true\r\n                        ? props.unfollow(props.id)\r\n                        : props.follow(props.id);\r\n                }}>\r\n            {props.followed === true ? \"unfollow\" : \"follow\"}\r\n        </button>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default UserElementMarkup;","import {Pagination} from \"antd\";\r\nimport UserElementMarkup from \"./UserElementMarkup\";\r\nimport React from 'react';\r\n\r\nlet Users = (props) => {\r\n\r\n    function onChange(pageNumber, pageSize) {\r\n        props.onPageChange(pageNumber, pageSize);\r\n    }\r\n\r\n    return <div>\r\n        <Pagination defaultCurrent={1} total={props.totalUsersCount} onChange={onChange}\r\n                    defaultPageSize={props.pageSize}/>\r\n\r\n        {props.usersData.map(elem => (\r\n            <UserElementMarkup key={elem.id} id={elem.id} name={elem.name}\r\n                               followed={elem.followed} waitingSubscribe={props.waitingSubscribe}                                    follow={props.follow} unfollow={props.unfollow}\r\n                               photos={elem.photos} status={elem.status}/>\r\n        ))}\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport style from \"./Loading.module.css\";\r\n\r\nlet Loading = () => {\r\n    return <div className={style.lds_roller}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n}\r\n\r\nexport default Loading;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersDataSelector = (state) => {\r\n    return state.usersPage.usersData;\r\n}\r\n\r\nexport const getUsersData = createSelector(getUsersDataSelector, (usersData)=> {\r\n    return usersData.filter(u => true);\r\n});//в эту функцию приходит state, хотя мы его не прописываем - так работает createSelector. (урок 83)\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const waitingResponse = (state) => {\r\n    return state.usersPage.waitingResponse;\r\n}\r\nexport const waitingSubscribe = (state) => {\r\n    return state.usersPage.waitingSubscribe;\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage, setPageSize,\r\n    unfollow\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Loading from \"../Common/Preloader/Loading\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsersData,\r\n    waitingResponse,\r\n    waitingSubscribe,\r\n} from \"../../redux/user-selector\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    /*return {\r\n        usersData: state.usersPage.usersData,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        waitingResponse: state.usersPage.waitingResponse,\r\n        waitingSubscribe: state.usersPage.waitingSubscribe\r\n    }*/\r\n    return {\r\n        usersData: getUsersData(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        waitingResponse: waitingResponse(state),\r\n        waitingSubscribe: waitingSubscribe(state)\r\n    }\r\n};\r\n\r\n//в классовую компоненту не приходят props. Props приходят в уже отрисованый jsx. Поэтому тут обращаемся к пропсам через this.\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChange = (pageNumber, pageSize) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.setPageSize(pageSize);\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.waitingResponse ? <Loading/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize} currentPage={this.props.currentPage}\r\n                   usersData={this.props.usersData} follow={this.props.follow} unfollow={this.props.unfollow}\r\n                   onPageChange={this.onPageChange} waitingSubscribe={this.props.waitingSubscribe}\r\n                   toggleSubscribeProgress={this.props.toggleSubscribeProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, getUsers, setPageSize})\r\n)(UsersContainer);","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);//возвращает массив, где первым значение будет false, а вторым функция меняющая первое значение\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    const deactivateStatusEditor = () => {\r\n        setEditMode(false);\r\n        props.sendNewStatus(status);\r\n    }\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    return <div>\r\n        PROFILE STATUS:\r\n        {!editMode && <span onDoubleClick={()=>setEditMode(true)}>{status}</span>}\r\n        {editMode && <input onChange={onStatusChange} onBlur={deactivateStatusEditor} value={status}></input>}\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default ProfileStatusHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Loading from \"../../Common/Preloader/Loading\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\nimport AvatarIMG from \"../../../assets/img/simple-avatar.png\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile){\r\n        return <Loading/>\r\n    }\r\n\r\n    const onPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.small != null ? props.profile.photos.small : AvatarIMG} alt='profile avatar'/>\r\n                {props.profile.userId === props.yourID && <input onChange={onPhotoSelected} type='file'/>}\r\n                <p>id: {props.profile.userId}</p>\r\n                <p>nickname: {props.profile.fullName}</p>\r\n                <ProfileStatusHooks sendNewStatus={props.sendNewStatus} status={props.status}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://store.playstation.com/store/api/chihiro/00_09_000/container/UA/ru/999/EP0177-CUSA07010_00-AV00000000000004/1593099665000/image?w=240&h=240&bg_color=000000&opacity=100&_version=00_09_000\" alt='avatar'/>\r\n          {props.message}\r\n      <div>\r\n        <span>Like : {props.like} </span>\r\n        <span>Dislike : 0</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let refTextArea = React.createRef(); //получает ссылку на объект. Тут на тег <textarea/>\r\n\r\n    let onPostChange = () => {\r\n        let postTextValue = refTextArea.current.value;\r\n        props.updTypingPost(postTextValue);\r\n    }\r\n\r\n    let addToPostsDataBase = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    return <div className={s.content}>\r\n        <div>\r\n            My posts\r\n        </div>\r\n\r\n        <textarea onChange={onPostChange} ref={refTextArea} value={props.postTypingText}/>\r\n        <div>\r\n            <button onClick={addToPostsDataBase}>Add post</button>\r\n            <button>Remove</button>\r\n        </div>\r\n\r\n        <div className={s.posts}>\r\n            {props.postsDataBase.map(elem => <Post message={elem.text} key={elem.id}\r\n                                                               like={elem.like}/>)}\r\n        </div>\r\n\r\n    </div>\r\n\r\n});\r\n\r\nexport default MyPosts;","import {addPostCreator, updTypingPostCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsDataBase: state.profilePage.postsDataBase,\r\n        postTypingText: state.profilePage.postTypingText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostCreator());\r\n        },\r\n        updTypingPost: (text) => {\r\n            let action = updTypingPostCreator(text);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n        <ProfileInfo savePhoto={props.savePhoto} profile={props.profile} yourID={props.yourID} status={props.status} sendNewStatus={props.sendNewStatus}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getUserProfile, getUserStatus, uploadPhoto, sendNewStatus} from \"../../redux/profileReducer\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.userID;\r\n        if(!userID){\r\n            userID = this.props.yourID;\r\n        }\r\n        this.props.getUserProfile(userID);\r\n        this.props.getUserStatus(userID);\r\n    };\r\n\r\n    render() {\r\n        return <div>\r\n            <Profile {...this.props} sendNewStatus={this.props.sendNewStatus}/>\r\n        </div>\r\n    }// {...this.props} передает все пропсы из mapStateToProps ProfileContainer'а в <Profile/> (59 урок 16минута)\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    yourID: state.authorizeBlock.userID\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, sendNewStatus, savePhoto: uploadPhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer); //оборачивание идет по функциям снизу вверх по списку\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <span>Забыл добавить в резюме ссылку на <a  target=\"_blank\" href='https://github.com/niZaliznyak/React_v1'>git-репозиторий</a>)) Красоту постараюсь успеть навести)</span>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuthorize\r\n                ? <div><h3>user: {props.login}</h3>\r\n                <button onClick={props.logOut}>Log Out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logOut} from \"../../redux/authorizeReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthorize: state.authorizeBlock.isAuthorize,\r\n    login: state.authorizeBlock.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logOut})(HeaderContainer);","import React from 'react';\r\nimport {Form, Input, Button, Checkbox} from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 8,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 4,\r\n        span: 8,\r\n    },\r\n};\r\n\r\nconst Login = ({signIn, isAuthorize}) => {\r\n    const onFinish = (values) => {\r\n        signIn(values.username, values.password, values.remember);\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    if (isAuthorize === true) return <div>Your already login!</div>;\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <Form {...layout} name=\"basic\" initialValues={{remember: true}} onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n            <Form.Item\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password/>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"remember\" valuePropName=\"checked\">\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </div>;\r\n}\r\n\r\nexport default Login;","import {sendSignIdData} from \"../../redux/authorizeReducer\";\r\nimport Login from \"./Login\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuthorize: state.authorizeBlock.isAuthorize\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (email, password, rememberMe) => {\r\n            dispatch(sendSignIdData(email, password, rememberMe));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginContainer from \"./components/Login/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Loading from \"./components/Common/Preloader/Loading\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    };\r\n\r\n    render() {\r\n        if(!this.props.initialized) {\r\n            return <Loading/>\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\r\n                    <Route path=\"/profile/:userID?\" render={() => <ProfileContainer/>}/>\r\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/login\" render={() => <LoginContainer/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);","import React from 'react';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/reduxStore\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\n\r\n\r\nlet reRenderEntireTree = () => {\r\n    ReactDOM.render(\r\n        <HashRouter>\r\n\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n\r\n        </HashRouter>, document.getElementById('root'));\r\n}; //bind позволяет при использовании this. ссылаться на свойства оригинального объекта, а не свойства объекта которым будет вызвана.\r\n\r\nreRenderEntireTree();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1QQHQ\",\"active\":\"Navbar_active__3_ypk\"};","module.exports = __webpack_public_path__ + \"static/media/simple-avatar.da821694.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__3tkny\",\"dialogsNamesWindow\":\"Dialogs_dialogsNamesWindow__1D3Lt\",\"chatWindow\":\"Dialogs_chatWindow__3UFSt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"DialogItem_active__gHXDC\",\"dialogImg\":\"DialogItem_dialogImg__eaGjg\",\"dialogName\":\"DialogItem_dialogName__2In07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sender\":\"ChatItem_sender__301_D\",\"answer\":\"ChatItem_answer__3m4qD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1tAeN\",\"userElement\":\"Users_userElement__3cP1E\",\"selectedPage\":\"Users_selectedPage__3su2S\"};"],"sourceRoot":""}